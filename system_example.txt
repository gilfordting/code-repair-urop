### PROBLEM STATEMENT
[PYTHON]
def sum_list(lst):
    """Return the sum of all the numbers in the list.
    >>> sum_list([50])
    50
    >>> sum_list([1, 2, 3])
    6
    >>> sum_list([])
    0
    """
[/PYTHON]
### INCORRECT CODE
[PYTHON]
def sum_list(lst):
    total = lst[0]
    for num in lst[1:]:
        total += num
    return total
[/PYTHON]
### ERROR
IndexError: list index out of range
### ANALYSIS
The error in the provided code is caused by the lack of handling for an empty list input. The code currently tries to sum elements in the list without checking if the list is empty. In Python, summing an empty list with the built-in sum() function correctly returns 0, but custom implementations may raise an error or behave unpredictably if the list is empty. Simply using the built-in sum() function should fix the bug.

The edge case to consider is:
* An empty list, which should return 0 as the sum.

### FIXED CODE
[PYTHON]
def sum_list(lst):
    return sum(lst)
[/PYTHON]